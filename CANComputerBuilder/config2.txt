/* 
 * This is the language for defining CANCOMPUTE operation
 */

// define some events first
define $p1 = NN:0000 EN:1112;
define $p2 = NN:0000 EN:2223;
define $sent = NN:0000 EN:3334;

//3456789012345678901234567890123456789012345678901234567890
//       1         2         3         4         5
// Now define some rules
when state($p1 is on) within 1sec send on$sent;
when state($p1 is off) within 1sec send off$sent;
when off$p1 before off$p2 within 1sec send off$sent;
when off$p1 before on$p2 within 1sec send off$sent;
when on$p1 before off$p2 within 1sec send off$sent;
when on$p1 before on$p2 within 1sec send off$sent;
when off$p1 after off$p2 within 1sec send off$sent;
when off$p1 after on$p2 within 1sec send off$sent;
when on$p1 after off$p2 within 1sec send off$sent;
when on$p1 after on$p2 within 1sec send off$sent;
when count(on$p1) > 1 within 1sec send on$sent then send off$sent;
when count(off$p1)>0 within 1sec send on$sent then send off$sent;
when count(on$p1)+count(on$p2) > 1 within 1sec send on$sent then send off$sent;
when count(on$p1) -1 > 1 within 1sec send on$sent then send off$sent;
when count(on$p1) > 1+1 within 1sec send on$sent then send off$sent;
when count(on$p1)=count(on$p2) within 1sec send on$sent then send off$sent;
when count(on$p1)!=0 within 1sec send on$sent then send off$sent;
when count(on$p1)<count(on$p2) within 1sec send on$sent then send off$sent;
when count(on$p1) <= count(on$p2) within 1sec send on$sent then send off$sent;
when count(on$p1) > count(on$p2) within 1sec send on$sent then send off$sent;
when count(on$p1)>=count(on$p2) within 1sec send on$sent then send off$sent;
when count(on$p1)>0 and count(on$p2)>0 within 1sec send on$sent then send off$sent;
when count(on$p1)>0 or count(on$p2)>0 within 1sec send on$sent then send off$sent;
when not count(on$p1) is 0 within 1sec send on$sent then send off$sent;
when state($p1 is on) within 1sec send on$sent, delay 2sec, send off$sent;