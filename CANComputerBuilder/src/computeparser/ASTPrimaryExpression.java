/* Generated By:JJTree: Do not edit this line. ASTPrimaryExpression.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package computeparser;

public
class ASTPrimaryExpression extends SimpleNode {
  public enum OpCodes {
	  COUNT,
	  EXPRESSION,
	  MESSAGE, 
	  INTEGER;
  }

private OpCodes opCode;
private int literal;


public ASTPrimaryExpression(int id) {
    super(id);
  }

  public ASTPrimaryExpression(ComputeGrammar p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(ComputeGrammarVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }

public void setOpCode(OpCodes op) {
	opCode = op;
	
}

public void setInt(String image) {
	literal = Integer.parseInt(image);
	
}

public OpCodes getOpCode() {
	return opCode;
}

public int getLiteral() {
	return literal;
}
}
/* JavaCC - OriginalChecksum=0184bc6995ec4796973aa3f36e2ccd9f (do not edit this line) */
