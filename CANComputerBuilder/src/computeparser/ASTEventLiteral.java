/* Generated By:JJTree: Do not edit this line. ASTEventLiteral.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package computeparser;

import computebuilder.Event;

public
class ASTEventLiteral extends SimpleNode {
	private Event event;
  public ASTEventLiteral(int id) {
    super(id);
  }

  public ASTEventLiteral(ComputeGrammar p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(ComputeGrammarVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }

  public void setEvent(String nn, String en) {
	event = new Event();
	event.setNN(Integer.valueOf(nn));
	event.setEN(Integer.valueOf(en));
  }

  public Event getEvent() {
	return event;
  }
}
/* JavaCC - OriginalChecksum=693990fd5caa6acb07ded9f4d9560fea (do not edit this line) */
